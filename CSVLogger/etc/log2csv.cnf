# ##############################################################################
# log2csv main configuration file.
#
# The file has to contain the modules to load as well as every channel to fetch.
# Each channel denotes a target variable logged within the CSV file. 
# Fetching data is done by media access control (MAC) modules accessing some 
# kind of network and application layer modules reading the actual value. Each 
# media access control module (MAC) is responsible for driving a certain kind of 
# message interface (like TTYs) and has to be named in this configuration file. 
# (Or any configuration file included by this file.)
# 
# The configuration syntax is described in http://www.hyperrealm.com/libconfig/
# libconfig_manual.html#Configuration-Files
#
# Please note, this file is a sample configuration file only! You may need to 
# adapt it.
#
# Author: Michael Spiegel, michael.h.spiegel@gmail.com
#
# Copyright (C) 2019 Michael Spiegel
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
# ##############################################################################

# The filename to append the data. The program will create the file and append
# a headline if the file doesn't exist.
outFile="data.csv";

# (optional) The format of the first CSV column holding the current time. It has
# to be a string following the strftime conventions (see $man 3 strftime) 
timeFormat="%d.%m.%Y %H:%M:%S";
# The title of the first column storing the current time
timeHeader="Time stamp";

# (optional) The delimiter used to separate fields in the CSV file. If no 
# fieldDelimiter is set, ";" is used.
fieldDelimiter=";"

# The fieldbus mac layer modules to load. Each module directive contains the 
# parameters needed. The mandatory name directive corresponds to the module's 
# type given by the shared object file. If a channel module requires a certain 
# MAC layer, the MAC layer's configuration has to be stated here.
mac=(
	{
		name="../DLoggModule/dlogg.so";
		# The virtual TTY interface, the D-LOGG device is connected to.
		# The parameter only takes action if the MAC module was compiled to use the
		# termios-based interface (Requires fewer external libraries)
		interface="/dev/ttyUSB0";
		# The USB device number of the FTDI device to use. The order of USB devices 
		# is determined internally. Sorry, if you have multiple FTDI USB adapter 
		# installed, you simply have to try to guess the correct number. If the 
		# parameter is not specified, the first fitting device will be taken.
		# The parameter is ignored if the MAC layer wasn't compiled to use the FTDI 
		# library. 
		device-nr=1
	}
	
);

# The list of channels to log
# Each channel corresponds to a column within the CSV file and has to contain 
# the channel type. Like the MAC layer type, the channel type is also given by
# specifying the module's shared object file. 
# An Address section specifies the channel's address including device and 
# channel parts. The format of the address sections contained within each 
# channel configuration highly depends on the module used.
channel=(

  # ############################################################################
  # Control Input Values 
  # ############################################################################

  {
		# The mandatory name of the driver module
		type="../DLoggModule/dlog-stdval.so";
		# The mandatory title of the channel used to label the CSV column 
		title="S1";
		# The address of the device to read
		address={
			# The identifier of d-logg's input channel [1,2]  
			controller=1;
			# Optional ID specifying a line multiplexing channel (Currently unused)
			line_id=0;
			# Channel prefix specifying the channel
			#  S -> input
			#  E -> external input
			#  A -> digital output 
			#  A.D -> analog output drive
			#  A.A -> analog output voltage
			#  WMZ.P -> heat meter, current power
			#  WMZ.E -> heat meter, energy registered
			channel_prefix="S";
			# The channel number 
			channel_number=1;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="S2";
		address={
			controller=1;
			channel_prefix="S";
			channel_number=2;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="S3";
		address={
			controller=1;
			channel_prefix="S";
			channel_number=3;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="S4";
		address={
			controller=1;
			channel_prefix="S";
			channel_number=4;
		};
  },
  
  # ############################################################################
  # Control Output Values 
  # ############################################################################
  
  {
		type="../DLoggModule/dlog-stdval.so";
		title="A1";
		address={
			controller=1;
			channel_prefix="A";
			channel_number=1;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="A1 drive";
		address={
			controller=1;
			channel_prefix="A.D";
			channel_number=1;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="A2";
		address={
			controller=1;
			channel_prefix="A";
			channel_number=2;
		};
  },
  
  # ############################################################################
  # Heat Meter
  # ############################################################################
  
  {
		type="../DLoggModule/dlog-stdval.so";
		title="Power WMZ 1";
		address={
			controller=1;
			channel_prefix="WMZ.P";
			channel_number=1;
		};
  },
  {
		type="../DLoggModule/dlog-stdval.so";
		title="Energy WMZ 1";
		address={
			controller=1;
			channel_prefix="WMZ.E";
			channel_number=1;
		};
  }

);
